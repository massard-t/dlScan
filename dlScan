#!/usr/local/bin/bash

usage() {
	name=$(echo $0 | sed "s/.*\\/\(.*\)/\\1/g")
	echo "usage: ${name} manga_name scan_number"
}

if [[ -z "${1}" ]] || [[ -z "${2}" ]]; then
	usage
	exit 1
fi

declare -A aliases

aliases["op"]="One Piece"
aliases["onepiece"]="One Piece"

aliases["opm"]="One Punch Man"
aliases["onepunchman"]="One Punch Man"

aliases["nrt"]="Naruto"
aliases["naruto"]="Naruto"

aliases["ft"]="Fairy Tail"
aliases["fairytail"]="Fairy Tail"

aliases["hh"]="Hunter X Hunter"
aliases["hxh"]="Hunter X Hunter"
aliases["hunter"]="Hunter X Hunter"
aliases["hunterhunter"]="Hunter X Hunter"
aliases["hunterxhunter"]="Hunter X Hunter"

aliases["nnt"]="Nanatsu No Taizai"
aliases["nanatsu"]="Nanatsu No Taizai"
aliases["taizai"]="Nanatsu No Taizai"
aliases["nanatsunotaizai"]="Nanatsu No Taizai"

aliases["aot"]="Shingeki No Kyojin"
aliases["adt"]="Shingeki No Kyojin"
aliases["ladt"]="Shingeki No Kyojin"
aliases["snk"]="Shingeki No Kyojin"
aliases["attackontitan"]="Shingeki No Kyojin"
aliases["attaquedestitans"]="Shingeki No Kyojin"
aliases["lattaquedestitans"]="Shingeki No Kyojin"
aliases["shingekinokyojin"]="Shingeki No Kyojin"

aliases["mha"]="My Hero Academia"
aliases["bnha"]="My Hero Academia"
aliases["heroacademia"]="My Hero Academia"
aliases["myheroacademia"]="My Hero Academia"
aliases["bokunoheroacademia"]="My Hero Academia"

aliases["berserk"]="Berserk"

aliases["fw"]="Shokugeki No Soma"
aliases["sns"]="Shokugeki No Soma"
aliases["foodwars"]="Shokugeki No Soma"
aliases["shokugekinosoma"]="Shokugeki No Soma"
aliases["shokugekinosouma"]="Shokugeki No Soma"

aliases["magi"]="Magi"

aliases["bc"]="Black Clover"
aliases["blackclover"]="Black Clover"

aliases["bleach"]="Bleach"

name=$(echo "${1}" | sed "s/[ -_.'\"\(\)\{\}\[\]]//g" | tr '[:upper:]' '[:lower:]')
name="${aliases[${name}]}"

if [[ -z "${name}" ]]; then
	name="${1}"
fi

skip_nbr=2
skip=0

ext=(png jpg jpeg gif)

urls=("http://cdn.japscan.com/lel/\${name}/\${2}/\${n}.\${ext[\$ex]}"\
      "http://cdn.japscan.com/lel/\${name}/\${2}/\${2} \(\${i}\).\${ext[\$ex]}")

i=0
ex=0
double=0
n_url=0
dl=0

exists=1
while [[ $exists -eq 1 ]]; do
	mkdir -p "${name}/${2}"
	n=$(printf "%02d" $i)
	if [[ $double -eq 1 ]]; then
		n="${n}"-$(printf "%02d" $(( $i + 1)))
	fi
	curl -s "$(eval echo "${urls[$n_url]}")" > "${name}/${2}/${n}.${ext[$ex]}"
	test=$(echo $(wc -c "${name}/${2}/${n}.${ext[$ex]}") | cut -d\  -f 1)
	if [[ $test -lt 1000 ]]; then
		rm -f "${name}/${2}/${n}.${ext[$ex]}"
		ex=$(( $ex + 1 ))
		if [[ $ex -ge ${#ext[@]} ]]; then
			double=$(( 1 - $double ))
			if [[ $double -eq 0 ]]; then
				n_url=$(( $n_url + 1 ))
				if [[ $n_url -ge ${#urls[@]} ]]; then
					skip=$(( $skip + 1 ))
					i=$(( i + 1 ))
					n_url=0
					if [[ $skip -gt $skip_nbr ]]; then
						exists=0
					fi
				fi
			fi
			ex=0
		fi
	else
		echo "Download $(eval echo "${urls[$n_url]}")"
		if [[ $double -eq 1 ]]; then
			i=$(( $i + 1 ))
		fi
		ex=0
		double=0
		skip=0
		dl=$(( $dl + 1 ))
	fi
	if [[ $exists -eq 0 ]]; then
		if [[ $dl -eq 0 ]]; then
			rm -rf "${name}/${2}"
			echo "Scan ${name} n°${2} not found"
			n=$(ls -1 "${name}" | wc -l)
			if [[ $n -eq 0 ]]; then
				rm -rf "${name}"
			fi
		else
			echo "Downloaded $dl images from ${name} n°${2}"
			open "${name}/${2}/"
		fi
	fi
	if [[ $test -gt 1000 ]]; then
		i=$(( $i + 1 ))
	fi
done

